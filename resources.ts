// import { v4 as uuidv4 } from 'uuid';

const uuidv4 = () => Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export type ResourceStatus = 'idle' | '...' | 'busy';
export type ResourceType = 'vessel' | 'port' | 'fence' | 'berth' | 'pilot' | 'cargo';

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export interface ResourceId {
    rsrcId:    string;
}

export interface ResourceReq {
    type:       ResourceType;
    rsrcId:     string | null;
    rsrcName?:  string;
}

export class Resource { 
    rsrcId:     string;
    rsrcName:   string;
    status?:    ResourceStatus;
    type:       ResourceType;

    resource?:  any; 

    constructor(type: ResourceType, rsrcName: string, data: any, status: ResourceStatus='idle', rsrcId?: string) {
        this.type = type;
        this.rsrcName = rsrcName;
        this.status = status;
        this.rsrcId = rsrcId || uuidv4();
        this.resource = data;

        dbResources.push(this);
        console.log(`Resource ${this.rsrcId} created`);
    }
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const Vessel = ( name: string, mmsi: number ): Resource => { 
    return new Resource('vessel', name, {}, 'idle', mmsi.toString());
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const Port = ( name: string, portId: string ): Resource => { 
    return new Resource('port', name, {}, 'idle', portId);
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const Berth = ( name: string, berthId: string ): Resource => { 
    return new Resource('berth', name, {}, 'idle', berthId.toString());
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const Cargo = ( name: string, cargoId: string ): Resource => { 
    return new Resource('cargo', name, {}, 'idle', cargoId.toString());
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const Pilot = ( name: string, pilotId: string ): Resource => { 
    return new Resource('pilot', name, {}, 'idle', pilotId.toString());
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const Fence = ( name: string, fenceId: string ): Resource => { 
    return new Resource('fence', name, {}, 'idle', fenceId.toString());
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
const dbResources: Resource[] = [];


////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
export const getResource = (rsrcId: string): (Resource | undefined) => {
    return dbResources.find(r => r.rsrcId === rsrcId);
}


